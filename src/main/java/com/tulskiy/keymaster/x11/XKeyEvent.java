package com.tulskiy.keymaster.x11;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : /usr/include/X11/Xosdefs.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("libX11")
public class XKeyEvent extends StructObject {
	public XKeyEvent() {
		super();
	}
	public XKeyEvent(Pointer pointer) {
		super(pointer);
	}
	/// of event
	@Field(0) 
	public int type() {
		return this.io.getIntField(this, 0);
	}
	/// of event
	@Field(0) 
	public XKeyEvent type(int type) {
		this.io.setIntField(this, 0, type);
		return this;
	}
	/// # of last request processed by server
	@CLong 
	@Field(1) 
	public long serial() {
		return this.io.getCLongField(this, 1);
	}
	/// # of last request processed by server
	@CLong 
	@Field(1) 
	public XKeyEvent serial(long serial) {
		this.io.setCLongField(this, 1, serial);
		return this;
	}
	/// true if this came from a SendEvent request
	@Field(2) 
	public int send_event() {
		return this.io.getIntField(this, 2);
	}
	/// true if this came from a SendEvent request
	@Field(2) 
	public XKeyEvent send_event(int send_event) {
		this.io.setIntField(this, 2, send_event);
		return this;
	}
	/**
	 * Display the event was read from<br>
	 * C type : Display*
	 */
	@Field(3) 
	public Pointer<LibX11.XDisplay> display() {
		return this.io.getPointerField(this, 3);
	}
	/**
	 * Display the event was read from<br>
	 * C type : Display*
	 */
	@Field(3) 
	public XKeyEvent display(Pointer<LibX11.XDisplay> display) {
		this.io.setPointerField(this, 3, display);
		return this;
	}
	/**
	 * "event" window it is reported relative to<br>
	 * C type : Window
	 */
	@CLong 
	@Field(4) 
	public long window() {
		return this.io.getCLongField(this, 4);
	}
	/**
	 * "event" window it is reported relative to<br>
	 * C type : Window
	 */
	@CLong 
	@Field(4) 
	public XKeyEvent window(long window) {
		this.io.setCLongField(this, 4, window);
		return this;
	}
	/**
	 * root window that the event occurred on<br>
	 * C type : Window
	 */
	@CLong 
	@Field(5) 
	public long root() {
		return this.io.getCLongField(this, 5);
	}
	/**
	 * root window that the event occurred on<br>
	 * C type : Window
	 */
	@CLong 
	@Field(5) 
	public XKeyEvent root(long root) {
		this.io.setCLongField(this, 5, root);
		return this;
	}
	/**
	 * child window<br>
	 * C type : Window
	 */
	@CLong 
	@Field(6) 
	public long subwindow() {
		return this.io.getCLongField(this, 6);
	}
	/**
	 * child window<br>
	 * C type : Window
	 */
	@CLong 
	@Field(6) 
	public XKeyEvent subwindow(long subwindow) {
		this.io.setCLongField(this, 6, subwindow);
		return this;
	}
	/**
	 * milliseconds<br>
	 * C type : Time
	 */
	@CLong 
	@Field(7) 
	public long time() {
		return this.io.getCLongField(this, 7);
	}
	/**
	 * milliseconds<br>
	 * C type : Time
	 */
	@CLong 
	@Field(7) 
	public XKeyEvent time(long time) {
		this.io.setCLongField(this, 7, time);
		return this;
	}
	/// pointer x, y coordinates in event window
	@Field(8) 
	public int x() {
		return this.io.getIntField(this, 8);
	}
	/// pointer x, y coordinates in event window
	@Field(8) 
	public XKeyEvent x(int x) {
		this.io.setIntField(this, 8, x);
		return this;
	}
	/// pointer x, y coordinates in event window
	@Field(9) 
	public int y() {
		return this.io.getIntField(this, 9);
	}
	/// pointer x, y coordinates in event window
	@Field(9) 
	public XKeyEvent y(int y) {
		this.io.setIntField(this, 9, y);
		return this;
	}
	/// coordinates relative to root
	@Field(10) 
	public int x_root() {
		return this.io.getIntField(this, 10);
	}
	/// coordinates relative to root
	@Field(10) 
	public XKeyEvent x_root(int x_root) {
		this.io.setIntField(this, 10, x_root);
		return this;
	}
	/// coordinates relative to root
	@Field(11) 
	public int y_root() {
		return this.io.getIntField(this, 11);
	}
	/// coordinates relative to root
	@Field(11) 
	public XKeyEvent y_root(int y_root) {
		this.io.setIntField(this, 11, y_root);
		return this;
	}
	/// key or button mask
	@Field(12) 
	public int state() {
		return this.io.getIntField(this, 12);
	}
	/// key or button mask
	@Field(12) 
	public XKeyEvent state(int state) {
		this.io.setIntField(this, 12, state);
		return this;
	}
	/// detail
	@Field(13) 
	public int keycode() {
		return this.io.getIntField(this, 13);
	}
	/// detail
	@Field(13) 
	public XKeyEvent keycode(int keycode) {
		this.io.setIntField(this, 13, keycode);
		return this;
	}
	/// same screen flag
	@Field(14) 
	public int same_screen() {
		return this.io.getIntField(this, 14);
	}
	/// same screen flag
	@Field(14) 
	public XKeyEvent same_screen(int same_screen) {
		this.io.setIntField(this, 14, same_screen);
		return this;
	}
}
